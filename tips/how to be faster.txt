tips

1 计算中尽量避免除法，尤其是内层循环
2 多次使用同一个值不变的表达式，在预处理中用变量记录
3 取模运算和除法运算一样慢
4 尽可能使用位运算代替乘除  位运算是最快的
5 尽量减少循环次数，能够在一个循环解决的不放在两个循环里面
6 二维数组比较慢，不要滥用二维数组，尽可能用一维数组代替
7 重复对高维数组寻址，很浪费时间
8 在编写数组有关的代码时候，尽量使用指针来进行所有操作。
9 对于一个元素多种性质的问题，应用结构体，而不是二维数组或者多个一维数组，可以提高效率，这在DP和搜索中常常出现
10 对于实数的比较，一定要使用误差机制 if (amount>24-0.00001&&amount<24+0.00001) return true；
11 搜索问题，尽量在外层循环剪枝
12 尽量使用scanf printf
13 不合理的编程习惯，如反复调用函数、无效状态的继续处理、频繁计算同一个表达式、直接使用高维数组，都会导致程序效率大大降低。
14 图的联通块之类问题，建议使用floodfill 广度优先搜索
